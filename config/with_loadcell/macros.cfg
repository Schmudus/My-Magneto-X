[gcode_macro SETTINGS]
gcode:
  SET_VELOCITY_LIMIT MINIMUM_CRUISE_RATIO=0.40
  SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=5
  SET_VELOCITY_LIMIT ACCEL=25000
  SET_VELOCITY_LIMIT VELOCITY=800
  SET_PAUSE_NEXT_LAYER ENABLE=0
  SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
  CLEAR_PAUSE
  SET_SKEW CLEAR=1
  M400

[gcode_macro PRINT_START]
gcode:
    SETTINGS 
    {%set EXTRUDER_TEMP = params.EXTRUDER|default(210)|float %}
    {%set BED_TEMP = params.BED|default(50)|float %}
    {%set material = params.MATERIAL %}
    {%set vendor = params.VENDOR %}
    {%set CHAMBER_ASA = 42 %}   #Min Chamber temp
    {%set CHAMBER_ABS = 40 %}   #Min Chamber temp
    {%set CHAMBER_ABS_GF = 38 %}   #Min Chamber temp
    {%set CHAMBER_PC = 40 %}   #Min Chamber temp
    _SET_TIMELAPSE_SETUP ENABLE=true
	LED_80
    LC28
    M117 Homing
    G28
    G0 Z55
    G1 X150 Y392 F4000
    {% if material == "ASA" %}
          SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber TARGET=60
          G0 Z15
          M117 Wait for heatbed temperature
          M190 S{BED_TEMP+5}
          M117 Wait for Chamber temperature {CHAMBER_ASA}°C
          TEMPERATURE_WAIT SENSOR="temperature_fan chamber" MINIMUM={CHAMBER_ASA}
          M117 Wait for heatbed cool down
          M190 S{BED_TEMP}
          G0 Z55
    {% elif material == "ABS" %}
          SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber TARGET=60
          G0 Z15
          M117 Wait for heatbed temperature
          M190 S{BED_TEMP+5}
          M117 Wait for Chamber temperature {CHAMBER_ABS}°C
          TEMPERATURE_WAIT SENSOR="temperature_fan chamber" MINIMUM={CHAMBER_ABS}
          M117 Wait for heatbed cool down
          M190 S{BED_TEMP}
          G0 Z55
      {% elif material == "PC" %}
          SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber TARGET=45
          G0 Z55
          M117 Wait for heatbed temperature
          M190 S{BED_TEMP+5}
          M117 Wait for Chamber temperature {CHAMBER_PC}°C
          TEMPERATURE_WAIT SENSOR="temperature_fan chamber" MINIMUM={CHAMBER_ABS}
          M117 Wait for heatbed cool down
          M190 S{BED_TEMP}
          G0 Z55
    {% elif material == "ABS-GF" %}
          SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber TARGET=45
          G0 Z20
          M117 Wait for heatbed temperature
          M190 S{BED_TEMP+5}
          M117 Wait for Chamber temperature {CHAMBER_ABS_GF}°C
          TEMPERATURE_WAIT SENSOR="temperature_fan chamber" MINIMUM={CHAMBER_ABS_GF}
          M117 Wait for heatbed cool down
          M190 S{BED_TEMP}
          G0 Z55
#              {% for i in range(SOAK_TIME_ABS) %}
#                  {% set remaining = SOAK_TIME_ABS - i %}
#                  M117 Remaining chamber heat time: {"%02d:%02d" % (remaining // 60, remaining % 60)}
#                  G4 P1000
#              {% endfor %}
    {% else %}
      {% if printer.heater_bed.temperature < 50.0 %}
            G0 Z25
            M118 Preheat bed
            M190 S50
            G0 Z55
      {% endif %}
    SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber TARGET=25
    {% endif %}
    M117 Preheat nozzle
    M109 S150
    M117 Nozzle cleaning
    M104 S140
    CLEAN_NOZZLE
    M106 S120
    G1 Z55
    M117 Nozzle cooling
    M109 S140
    M106 S0
    M117 Homing with clean nozzle
    CLEAN_NOZZLE_SHORT
    LC28
    G28 Z
    M117 Quad Gantry Leveling
    LC28
    LOW_Z
    QUAD_GANTRY_LEVEL_BASE
    NORM_Z
    G0 Z55 F200
    G0 X60 Y392 F4000
    M117 Final heating
    M190 S{BED_TEMP}
    M109 S{EXTRUDER_TEMP}
    SET_TMC_CURRENT STEPPER=extruder CURRENT=1.1 HOLDCURRENT=0.8
    M117 Purge
    G1 X110 Y390 Z55 F3000
    G0 Z1
    G92 E0
    G1 X235 Y390 E40 F2400
    G92 E0
    G1 E-5
    G92 E0
    G0 X235 Y391 F6000
    G1 X110 Y391 E40 F2400
    G92 E0
    G1 E-5
    G92 E0
    G0 X110 Y392 F6000
    G1 X235 Y392 E40 F2400
    G92 E0
    G1 E-5
    G92 E0
    G0 X235 Y393 F6000
    G1 X110 Y393 E40 F2400
    G92 E0
    G1 E-1
    G0 Z55
    G92 E0
    G1 E-1
    G92 E0
    G1 X60 Y392
    G92 E0
    G1 E-1
    G92 E0
    M117 Nozzle cleaning
    CLEAN_NOZZLE_SHORT
    G0 Z55
    G0 X250 Y390 F5000
    M400
	LED_50
    SKEW_PROFILE LOAD=calilantern_skew_profile
    MESH_LOAD
    M117 Printing with {vendor} {material}
  	M118 ... Printing ...
    G1 E+1
    G92 E0


[gcode_macro PRINT_END]
gcode:
  M117
  SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber TARGET=10
  M140 S0
  M104 S180
  G91 
  G1 Z+10
  M106 S200
  G90
  G92 E0
  G1 E-5 F800
  G0 X25 Y25 F6500
  G4 P2000
  G92 E0
  G1 E-5 F800
  G4 P5000
  G92 E0
  G1 E-5 F500
  G92 E0
  M109 S0
  M104 S0 
  G4 P60000
  M106 S130
  G90
  G1 X10 Y10 F12000
  G91
    {% if (printer.gcode_move.position.z + 75) < 280 %}
        G1 Z+75 F3000
    {% else %}
        G90
        G1 Z280 F3000
    {% endif %}
  G4 P60000
  G90
  M106 S0
  SETTINGS
  TURN_OFF_HEATERS
  SET_LED LED=LED WHITE=0 SYNC=0 TRANSMIT=1
  SET_TMC_CURRENT STEPPER=extruder CURRENT=0.6 HOLDCURRENT=0.6
  SET_SKEW CLEAR=1
  LOW_Z
  SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber TARGET=40
  M118 Print finished :-)
  UPDATE_DELAYED_GCODE ID=delay_disable_motor DURATION=120


[gcode_macro CLEAN_NOZZLE]
gcode:
  {% set wipe_count = 8 %}
  G90
  G0 Z55 F300
  G0 X70 Y392 F3000
  M106 S200
  G0 Z45 F300
  {% for wipe in range(wipe_count) %}
    {% for coordinate in [(52, 392),(3, 392)] %}
      G0 X{coordinate[0]} Y{coordinate[1] + 0.1 * wipe} Z45 F9000
    {% endfor %}
  {% endfor %}
  M106 S0
  G0 X70 Y390 Z55 F3000


[gcode_macro CLEAN_NOZZLE_SHORT]
gcode:
  {% set wipe_count = 3 %}
  G90
  G0 Z55 F300
  G0 X70 Y392 F3000
  M106 S200
  G0 Z45 F300
  {% for wipe in range(wipe_count) %}
    {% for coordinate in [(52, 392),(3, 392)] %}
      G0 X{coordinate[0]} Y{coordinate[1] + 0.1 * wipe} Z45 F9000
    {% endfor %}
  {% endfor %}
  M106 S0
  G0 X70 Y390 Z55 F3000


[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  SET_SKEW CLEAR=1
  TURN_OFF_HEATERS
  G91 
  G1 Z+10
  G90
  G92 E0
  G1 E-5 F1000
  G92 E0
  G91
    {% if (printer.gcode_move.position.z + 75) < 270 %}
        G1 Z+75 F3000
    {% else %}
        G90
        G1 Z270 F3000
    {% endif %}
  M109 S0
  M104 S0 
  M106 S0
  G90
  G1 X10 Y10 F12000
  CANCEL_PRINT_BASE
  SETTINGS
  SET_LED LED=LED WHITE=0 SYNC=0 TRANSMIT=1
  SET_TMC_CURRENT STEPPER=extruder CURRENT=0.6 HOLDCURRENT=0.6
  LOW_Z
  SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber TARGET=40
  M118 Print cancelled :-(
  UPDATE_DELAYED_GCODE ID=delay_disable_motor DURATION=120 


[gcode_macro BED_MESH_CALIBRATE]
rename_existing:BED_MESH_CALIBRATE_BASE
gcode:
  LOW_Z
  {% if "z" not in printer.toolhead.homed_axes %}
    LC28
    G28 Z
  {% endif %}
  M118 Heating the bed, please wait...
  M190 S70
  M118 Complete heating and start executing bed mesh calibrate
  BED_MESH_CALIBRATE_BASE

[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing: QUAD_GANTRY_LEVEL_BASE
variable_protection_enable: 0
gcode:
    LOW_Z
    LC28
    G28
    M118 Heating the bed, please wait...
    M190 S60
    M118 Complete heating and start executing quad gantry level
  SET_GCODE_VARIABLE MACRO=QUAD_GANTRY_LEVEL VARIABLE=protection_enable VALUE=1
  TEST
  QUAD_GANTRY_LEVEL_BASE
  SET_GCODE_VARIABLE MACRO=QUAD_GANTRY_LEVEL VARIABLE=protection_enable VALUE=0
  TEST
  M190 S0
  G90
  G0 Z100
  M118 Quad gantry level finished


[gcode_macro CALIBRATE_BED_LT]
description: Quad gantry level and create or update the "default" mesh and save config - Low bed temperature
gcode:
  LM_ENABLE
  LOW_Z
  M190 S60
  M109 S150
  LC28
  G4 P1000
  G28
  M104 S140
  CLEAN_NOZZLE
  G1 Z55
  LC28
  G4 P1000
  G28 Z
  G1 Z55
  M109 S140
  QUAD_GANTRY_LEVEL_BASE
  BED_MESH_CALIBRATE_BASE
  NORM_Z
  TURN_OFF_HEATERS
  G0 Z55
  G0 X156 Y198
  G4 P10000
  M400
  SAVE_CONFIG

[gcode_macro CALIBRATE_BED_HT]
description: Quad gantry level and create or update the "default" mesh and save config - High bed temperature
gcode:
  LM_ENABLE
  LOW_Z
  M117 Homing
  LC28
  G4 P1000
  G28
  G0 Z55
  M117 Heating bed
  SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber TARGET=50
  M190 S115
  M117 Wait for Chamber temperature reach 40°C
  TEMPERATURE_WAIT SENSOR="temperature_fan chamber" MINIMUM=40
  M117 Heating nozzle
  M109 S150
  M104 S140
  M117 Clean nozzle
  CLEAN_NOZZLE
  G1 Z55
  M117 Home Z with clean nozzle
  LC28
  G4 P1000
  G28 Z
  G1 Z55
  M109 S140
  M117 Gantry Leveling
  QUAD_GANTRY_LEVEL_BASE
  M117 Mesh calibrater
  BED_MESH_CALIBRATE_BASE
  NORM_Z
  TURN_OFF_HEATERS
  G0 Z50
  G0 X156 Y198
  G4 P10000
  SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber TARGET=40
  M400
  SAVE_CONFIG

[gcode_macro TUNE_BED_PID]
gcode:
  PID_CALIBRATE HEATER=heater_bed TARGET=110 #70 WRITE_FILE=0
  G4 P5000
  M400
  SAVE_CONFIG

[gcode_macro TUNE_EXTRUDER_PID]
gcode:
  PID_CALIBRATE HEATER=extruder TARGET=240 WRITE_FILE=0
  G4 P5000
  M400
  SAVE_CONFIG

[gcode_macro SET_XYZ_POSITION]
gcode:
  SET_KINEMATIC_POSITION X=100 Y=100 Z=100

[gcode_macro RUN_INPUT_SHAPER]
gcode:
  SHAPER_CALIBRATE

[gcode_macro Z_TO_BOTTOM]
gcode:
  NORM_Z
  G1 Z270
  LOW_Z

[delayed_gcode cool_hot_end]
gcode:
    {% if printer['pause_resume'].is_paused|int == 1 %}
      M104 S0   
    {% endif %}

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    CLEAR_PAUSE
    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE={printer[printer.toolhead.extruder].target} 
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_fan_speed VALUE={printer["fan"].speed}   
        SAVE_GCODE_STATE NAME=PAUSE                                                          
        BASE_PAUSE                                                                           
        G1 Z{printer.gcode_move.position.z+10} F300
        G1 X300 Y50 F6000
        SAVE_GCODE_STATE NAME=PAUSEPARK      
        M107
        UPDATE_DELAYED_GCODE ID=cool_hot_end DURATION=180
        LOW_Z
    {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_last_fan_speed: 0
variable_last_extruder_temp: 0
gcode:
    {% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
    {% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
    {% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
    {% set sp_move = velocity if not macro_found else client.speed_move|default(velocity) %}
    ##### end of definitions #####
    M109 S{last_extruder_temp}
    M106 S{last_fan_speed*255|int}
    _CLIENT_EXTRUDE
    BASE_RESUME VELOCITY={params.VELOCITY|default(sp_move)}
    NORM_Z

[gcode_macro MESH_LOAD]
gcode:
    BED_MESH_PROFILE LOAD=default

[delayed_gcode delay_disable_motor]
gcode:
    LM_DISABLE
    M84

# touch screen unload filament
[gcode_macro UNLOAD_FILAMENT] 
gcode:  
   {% if printer.idle_timeout.state != 'Printing' %}
        {% if printer[printer.toolhead.extruder].temperature < printer.configfile.settings['extruder'].min_extrude_temp %}
           M118 Heating nozzle...
           M109 S220
        {% endif %}
      G91
      M118 Fill nozzle...
      M106 S200
      G92 E0   
      G1 E40 F360  
      G4 P1000
      G92 E0   
      G1 E40 F360 
      G4 P1000
      G92 E0   
      G1 E5 F400
      M118 Cooling nozzle to 200 ...
      M104 S200
      G4 P3000
      M107
      M118 Unloading...
      G92 E0   
      G0 E-15 F800
      G4 P2000
      G92 E0   
      G0 E-15 F800
      G4 P3000
      G92 E0
      G0 E-15 F800
      G4 P3000
      G92 E0   
      G0 E-15 F800
      G4 P3000
      G92 E0   
      G0 E-15 F800
      G4 P3000
      G92 E0   
      G0 E-15 F800
      G92 E0
      G0 E-50 F400
      G92 E0
      G90
      M104 S0
      M118 Unload finish
   {% endif %}

# toolhead button unload filament
[gcode_macro B_UNLOAD_FILAMENT] 
gcode:  
      UNLOAD_FILAMENT

# Display button load filament
[gcode_macro LOAD_FILAMENT]
gcode:
      M118 Load filament - Fill nozzle
      {% if printer[printer.toolhead.extruder].temperature < printer.configfile.settings['extruder'].min_extrude_temp %}
          M118 Heating nozzle...
          M109 S230
      {% endif %}
      G91  
      G92 E0   
      G1 E20 F200
      G4 P1000
      G92 E0   
      G1 E30 F300
      G4 P1000
      G92 E0   
      G1 E50 F500
      G92 E0   
      G4 P1000
      G92 E0   
      G1 E50 F600
      G4 P1000
      G92 E0   
      G1 E-5 F800
      M118 Load filament - Purge
      G92 E0   
      G1 E15 F600
      G4 P1000
      G92 E0   
      G1 E-5 F800
      G92 E0   
      G1 E25 F600
      G4 P1000
      G92 E0   
      G1 E-5 F800
      G92 E0   
      G1 E25 F600
      G4 P1000
      G92 E0   
      G1 E-5 F800
      M118 Loading finished
      M104 S0

# toolhead button load filament
[gcode_macro B_LOAD_FILAMENT] 
gcode:  
    LOAD_FILAMENT

[gcode_macro M106]
rename_existing: G106
gcode:
    {% if params.P is defined %}
        {% if params.P|int == 2 %}
            {% if params.S is defined %}
                {% if params.S|int == 255 %}
                    {% set realspeed = 1 %}
                {% else %}
                    {% if params.S|int == 0 %}
                        {% set realspeed = 0 %}
                    {% else %}
                        {% set realspeed = params.S|float/255 %}
                    {% endif %}
                {% endif %}
            {% else %}
                {% set realspeed = 1 %}
            {% endif %}

        {% endif %}
    {% else %}
        {% if params.S is defined %}
          G106 S{params.S}
        {% else %}
          G106 S255
        {% endif %}
    {% endif %}

[gcode_macro TEST_X_MOVE]
gcode:
    # Speed
    {% set speed = params.SPEED|default(400)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(10)|int %}
    # Acceleration
    {% set accel = params.ACCEL|default(10000)|int %}
    SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel *0.75}
    {% if "z" not in printer.toolhead.homed_axes %}
      G28 Z
    {% endif %}
    {% if "xy" not in printer.toolhead.homed_axes %}
      G28
    {% endif %}
    G1 Z20 F300
    GET_POSITION
    {% for i in range(iterations) %}
        G0 X50 Y150 F{speed*60}
        G0 X290 Y150 F{speed*60}
    {% endfor %}
    GET_POSITION
    G0 X150 Y200 F{speed*30}

[gcode_macro TEST_Y_MOVE]
gcode:
    # Speed
    {% set speed = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel*0.75}
    G28
    G1 Z20 F300
    {% for i in range(iterations) %}
        G0 X100 Y50 F{speed*60}
        G0 X100 Y350 F{speed*60}
    {% endfor %}

[gcode_macro TEST_Z_MOVE]
gcode:
    # Speed
    {% set speed  = params.SPEED|default(20)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(3)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel *0.75}
    G28
    GET_POSITION
    {% for i in range(iterations) %}
        G0 Z10 F{speed*60}
        G0 Z266 F{speed*60}
    {% endfor %}
    G28
    GET_POSITION

[gcode_macro TEST_XY_MOVE]
gcode:
    # Speed
    {% set speed = params.SPEED|default(400)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel * 0.75}
    {% if "z" not in printer.toolhead.homed_axes %}
      G28 Z
#    {% endif %}
#    {% if "xy" not in printer.toolhead.homed_axes %}
    {% elif "x" not in printer.toolhead.homed_axes %}
      G28 X
    {% elif "y" not in printer.toolhead.homed_axes %}
      G28 Y
    {% endif %}
    G1 Z20 F300
    {% for i in range(iterations) %}
        G0 X10 Y10 F{speed*60}
        G0 X250 Y350 F{speed*60}
    {% endfor %}
    G0 X10 Y 350 FF{speed*30}
    {% for i in range(iterations) %}
        G0 X10 Y350 F{speed*60}
        G0 X250 Y10 F{speed*60}
    {% endfor %}
    G0 X150 Y200 F{speed*30}

[gcode_macro LED_off]
gcode:
    SET_LED LED=LED WHITE=0 SYNC=0 TRANSMIT=1

[gcode_macro LED_25]
gcode:
    SET_LED LED=LED WHITE=0.25 SYNC=0 TRANSMIT=1

[gcode_macro LED_50]
gcode:
    SET_LED LED=LED WHITE=0.5 SYNC=0 TRANSMIT=1

[gcode_macro LED_80]
gcode:
    SET_LED LED=LED WHITE=0.80 SYNC=0 TRANSMIT=1

[gcode_shell_command  RESIZE_FILE_SYSTEM]
command: curl -G http://127.0.0.1:8880/auto_resize_filesystem
timeout: 2.
verbose: False

[gcode_macro RESIZE_FILESYSTEM]
gcode:
  RUN_SHELL_COMMAND CMD=RESIZE_FILE_SYSTEM

[gcode_macro LINER_MOTOR]
gcode:
  {% if params.ENABLE is defined %}
    {% if params.ENABLE|int == 0 %}
      RUN_SHELL_COMMAND CMD=LINER_MOTOR_DISABLE
    {% else %}
      RUN_SHELL_COMMAND CMD=LINER_MOTOR_ENABLE
    {% endif %}
  {% else %}
    RUN_SHELL_COMMAND CMD=LINER_MOTOR_ENABLE
  {% endif %}

[gcode_macro LM_ENABLE]
gcode:
  G4 P500
  RUN_SHELL_COMMAND CMD=LINER_MOTOR_ENABLE
  G4 P4000
  
[gcode_macro LM_DISABLE]
gcode:
  G4 P500
  RUN_SHELL_COMMAND CMD=LINER_MOTOR_DISABLE
  G4 P4000

[gcode_shell_command LINER_MOTOR_ENABLE]
command: curl -G http://127.0.0.1:8880/send_command?command=ENABLE
timeout: 2.
verbose: False

[gcode_shell_command LINER_MOTOR_DISABLE]
command: curl -G http://127.0.0.1:8880/send_command?command=DISABLE
timeout: 2.
verbose: False
  
[gcode_shell_command MOTOR_CONTROL]
command: curl -G http://127.0.0.1:8880/motor_control
timeout: 2.
verbose: True

[gcode_macro LINEAR_MOTOR_CONTROL]
gcode:
  RUN_SHELL_COMMAND CMD=MOTOR_CONTROL

[gcode_macro LOW_Z]
gcode:
  SET_TMC_CURRENT STEPPER=stepper_z CURRENT=0.9 HOLDCURRENT=0.9
  SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT=0.9 HOLDCURRENT=0.9
  SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT=0.9 HOLDCURRENT=0.9
  SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT=0.9 HOLDCURRENT=0.9

[gcode_macro NORM_Z]
gcode:
  SET_TMC_CURRENT STEPPER=stepper_z CURRENT=1.25 HOLDCURRENT=1.25
  SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT=1.25 HOLDCURRENT=1.25
  SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT=1.25 HOLDCURRENT=1.25
  SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT=1.25 HOLDCURRENT=1.25

[gcode_macro TEST]
gcode:
    G4 P250
    {% if printer["gcode_macro G28"].protection_enable == 1 %}
        M118 Overload protection enabled while homing
        G4 P1000
    {% elif printer["gcode_macro QUAD_GANTRY_LEVEL"].protection_enable == 1 %}
        M118 Overload protection enabled while quad gantry level
        G4 P1000
    {% elif printer["gcode_macro QUAD_GANTRY_LEVEL"].protection_enable != 1 %}
        {%if printer["gcode_macro QUAD_GANTRY_LEVEL"].protection_enable != 1 %}
            M118 Overload protection disabled
            G4 P1000
        {% endif %}
    {% endif %}

[gcode_macro SEARCH_VARS]
gcode:
    {% set search = params.S|lower %}
    {% set ns = namespace() %}
    {% for item in printer  %}
        {% if ' ' in item %}
            {% set ns.path = ['printer', "['%s']" % (item), ''] %}
        {% else %}
            {% set ns.path = ['printer.', item, ''] %}   
        {% endif %} 

        {% if search in ns.path|lower %}
            { action_respond_info(ns.path|join) }
        {% endif %} 

        {% if printer[item].items() %}
            {% for childkey, child in printer[item].items() recursive %}
                {% set ns.path = ns.path[:loop.depth|int + 1] %}

                {% if ' ' in childkey %}
                    {% set null = ns.path.append("['%s']" % (childkey)) %}
                {% else %}
                    {% set null = ns.path.append(".%s" % (childkey)) %}
                {% endif %} 

                {% if child is mapping  %}
                    { loop(child.items()) }
                {% else %}
                    {% if search in ns.path|lower %}
                        { action_respond_info("%s : %s" % (ns.path|join, child)) }   
                    {% endif %} 
                {% endif %} 
                
            {% endfor %}
        {% endif %} 
    {% endfor %}

  